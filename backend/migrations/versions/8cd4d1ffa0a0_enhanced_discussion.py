"""enhanced discussion

Revision ID: 8cd4d1ffa0a0
Revises: c0bd82e0d54a
Create Date: 2025-09-06 21:55:27.064617

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8cd4d1ffa0a0'
down_revision = 'c0bd82e0d54a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discussion_analytics',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('total_comments', sa.Integer(), server_default='0', nullable=False),
    sa.Column('total_replies', sa.Integer(), server_default='0', nullable=False),
    sa.Column('total_upvotes', sa.Integer(), server_default='0', nullable=False),
    sa.Column('total_downvotes', sa.Integer(), server_default='0', nullable=False),
    sa.Column('expert_participants', sa.Integer(), server_default='0', nullable=False),
    sa.Column('discussion_score', sa.Float(), server_default='0.0', nullable=False),
    sa.Column('last_activity', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id')
    )
    op.create_table('comment_reactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comment_id', 'user_id', 'type', name='uq_comment_user_reaction_type')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_comment_id', sa.UUID(), nullable=True))
        batch_op.create_foreign_key(None, 'comments', ['parent_comment_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expertise_level', sa.Text(), server_default='BEGINNER', nullable=False))
        batch_op.add_column(sa.Column('expertise_areas', postgresql.ARRAY(sa.Text()), server_default='{}', nullable=False))
        batch_op.add_column(sa.Column('discussion_contribution_score', sa.Float(), server_default='0.0', nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('discussion_contribution_score')
        batch_op.drop_column('expertise_areas')
        batch_op.drop_column('expertise_level')

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('parent_comment_id')

    op.drop_table('comment_reactions')
    op.drop_table('discussion_analytics')
    # ### end Alembic commands ###
